{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\Programa\\xE7\\xE3o\\\\NFTs\\\\nft-main\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\Programa\\xE7\\xE3o\\\\NFTs\\\\nft-main\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"D:\\\\Programa\\xE7\\xE3o\\\\NFTs\\\\nft-main\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Programa\\xE7\\xE3o\\\\NFTs\\\\nft-main\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Programa\\xE7\\xE3o\\\\NFTs\\\\nft-main\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Programa\\xE7\\xE3o\\\\NFTs\\\\nft-main\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Programa\\xE7\\xE3o\\\\NFTs\\\\nft-main\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Programa\\xE7\\xE3o\\\\NFTs\\\\nft-main\\\\src\\\\components\\\\App.js\";\nimport React, { Component } from \"react\";\nimport Web3 from \"web3\";\nimport detectEthereumProvider from \"@metamask/detect-provider\"; //import KriptoBird from \"../abis/KryptoBirdz.json\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchain();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var provider;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return detectEthereumProvider();\n\n              case 2:\n                provider = _context2.sent;\n\n                if (provider) {\n                  console.log('ethereum wallet is connected');\n                  window.web3 = new Web3(provider);\n                } else {\n                  console.log('no ethereum wallet connected');\n                }\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockchain\",\n    value: function () {\n      var _loadBlockchain = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var accounts;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return window.web3.detectEthereumProvider.getAccounts();\n\n              case 2:\n                accounts = _context3.sent;\n                console.log(accounts);\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function loadBlockchain() {\n        return _loadBlockchain.apply(this, arguments);\n      }\n\n      return loadBlockchain;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"Tokens NFT\"));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["D:\\Programação\\NFTs\\nft-main\\src\\components\\App.js"],"names":["React","Component","Web3","detectEthereumProvider","App","loadWeb3","loadBlockchain","provider","console","log","window","web3","getAccounts","accounts"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,sBAAP,MAAmC,2BAAnC,C,CACA;;IAEMC,G;;;;;;;;;;;;;;;;;;;;;;uBAEQ,KAAKC,QAAL,E;;;;uBACA,KAAKC,cAAL,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;uBAIiBH,sBAAsB,E;;;AAAvCI,gBAAAA,Q;;AACN,oBAAGA,QAAH,EAAa;AACTC,kBAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACAC,kBAAAA,MAAM,CAACC,IAAP,GAAc,IAAIT,IAAJ,CAASK,QAAT,CAAd;AACH,iBAHD,MAIK;AACDC,kBAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;uBAIsBC,MAAM,CAACC,IAAP,CAAYR,sBAAZ,CAAmCS,WAAnC,E;;;AAAjBC,gBAAAA,Q;AACNL,gBAAAA,OAAO,CAACC,GAAR,CAAYI,QAAZ;;;;;;;;;;;;;;;;;;6BAGK;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,CADJ;AAKH;;;;EA5BaZ,S;;AA+BlB,eAAeG,GAAf","sourcesContent":["import React, {Component} from \"react\";\r\nimport Web3 from \"web3\";\r\nimport detectEthereumProvider from \"@metamask/detect-provider\";\r\n//import KriptoBird from \"../abis/KryptoBirdz.json\";\r\n\r\nclass App extends Component {\r\n    async componentDidMount() {\r\n        await this.loadWeb3();\r\n        await this.loadBlockchain();\r\n    }\r\n\r\n    async loadWeb3() {\r\n        const provider = await detectEthereumProvider();\r\n        if(provider) {\r\n            console.log('ethereum wallet is connected');\r\n            window.web3 = new Web3(provider);\r\n        } \r\n        else {\r\n            console.log('no ethereum wallet connected');\r\n        }\r\n    }\r\n\r\n    async loadBlockchain() {\r\n        const accounts = await window.web3.detectEthereumProvider.getAccounts();\r\n        console.log(accounts);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <h1>Tokens NFT</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}